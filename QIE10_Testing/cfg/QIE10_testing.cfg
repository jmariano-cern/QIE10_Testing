# any line STARTING with '#' is a comment

# start each definition with <start_definition> and end with <end_definition>, each on it's own line
# every definition requires a name and type at minimum

# blocks must be declared AFTER name and type

# to fill a histogram, use the <fill> tag followed by the arguments to ->Fill()
      # example: <fill> (nTS, adc);

###########################################
<start_definition>
name = "General"
type = null

loop_vars = <start_block>
  int pdac2poff[64] = {0,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31};
  float ici2q[8] = {90, 180, 360, 720, 1440, 2880, 5760, 8640}; 
  float ph2ns[128] = {0.0,0.5,1.0,1.5,2.0,2.5,3.0,3.5,4.0,4.5,5.0,5.5,6.0,6.5,7.0,7.5,8.0,8.5,9.0,9.5,10.0,10.5,11.0,11.5,12.0,12.5,13.0,13.5,14.0,14.5,15.0,15.5,16.0,16.5,17.0,17.5,18.0,18.5,19.0,19.5,20.0,20.5,21.0,21.5,22.0,22.5,23.0,23.5,24.0,24.5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,25.0,25.5,26.0,26.5,27.0,27.5,28.0,28.5,29.0,29.5,30.0,30.5,31.0,31.5,32.0,32.5,33.0,33.5,34.0,34.5,35.0,35.5,36.0,36.5,37.0,37.5,38.0,38.5,39.0,39.5,40.0,40.5,41.0,41.5,42.0,42.5,43.0,43.5,44.0,44.5,45.0,45.5,46.0,46.5,47.0,47.5,48.0,48.5,49.0,49.5,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
  int adcped = 4;
  float qped = adc2fC_QIE10_refl[ adcped ];
  bool corrupt = 0;
  float qsum = 0;
  float qmax = 0;
  int ts_max = 0;
  float qmax2p = 0;
  float qmax2m = 0;
  float qmax3 = 0;
  int ts_TDC1 = -1;
  int ts_TDC2 = -1;
  int cid_TDC1 = -1;
  int cid_TDC2 = -1;
  int ts_ref = -1;
  int ref_ns = 55;
  float t_abs = -1.0;
  float t_cid = -1.0;
<end_block>

pre_loop = <start_block>

  global.corrupt = 0;
  for (int iTS=0 ; iTS<10 ; iTS++) { 
    if (digis[iTS].le_tdc() == 0) {
      global.corrupt = 1;
    }
    if ((_event_num == 0) || (_event_num == 1)) {
      global.corrupt = 1;
    }
  }

  global.qsum = 0;
  global.qmax = 0;
  global.ts_max = 0;
  global.ts_TDC1 = -1;
  global.ts_TDC2 = -1;
  global.cid_TDC1 = -1;
  global.cid_TDC2 = -1;
  bool TDC1_flag = 0;
  bool TDC2_flag = 0;
  for ( int iTS=0 ; iTS<digis.samples() ; iTS++) {
    global.qsum += adc2fC_QIE10_refl[ digis[iTS].adc() ] + 14.45;
    if ((adc2fC_QIE10_refl[ digis[iTS].adc() ] + 14.45) > global.qmax) {
      global.qmax = adc2fC_QIE10_refl[ digis[iTS].adc() ] + 14.45;
      global.ts_max = iTS;
    }
    if ((TDC1_flag == 0) && (digis[iTS].le_tdc() < 50)) {
      TDC1_flag = 1;
      global.ts_TDC1 = iTS;
      global.cid_TDC1 = digis[iTS].capid();
    }
    if ((TDC1_flag == 1) && (TDC2_flag == 0) && (digis[iTS].le_tdc() < 50)) {
      TDC2_flag = 1;
      global.ts_TDC2 = iTS;
      global.cid_TDC2 = digis[iTS].capid();
    }
  }
  global.t_abs = ((global.ts_TDC1)*25.0) + (digis[global.ts_TDC1].le_tdc()*0.5);
  global.t_cid = (global.cid_TDC1*25.0) + (digis[global.ts_TDC1].le_tdc()*0.5);

  global.qmax2p = -1;
  global.qmax2m = -1;
  global.qmax3 = -1;
  if (global.ts_max > 0) {
    global.qmax2m = adc2fC_QIE10_refl[ digis[global.ts_max-1].adc() ] + adc2fC_QIE10_refl[ digis[global.ts_max].adc() ] + (2*14.45);
  }
  if (global.ts_max < 9) {
    global.qmax2p = adc2fC_QIE10_refl[ digis[global.ts_max].adc() ] + adc2fC_QIE10_refl[ digis[global.ts_max+1].adc() ] + (2*14.45);
  } 
  if ((global.ts_max > 0) && (global.ts_max < 9)) {
    global.qmax3 = adc2fC_QIE10_refl[ digis[global.ts_max-1].adc() ] + adc2fC_QIE10_refl[ digis[global.ts_max].adc() ] + adc2fC_QIE10_refl[ digis[global.ts_max+1].adc() ] + (3*14.45);  
  }

  int ref_offset = 999;
  if (global.ts_TDC1 > -1) {
    ref_offset = ((int)(((float)digis[global.ts_TDC1].le_tdc()*0.5) + (float)global.ref_ns) - (int)(((float)digis[global.ts_TDC1].le_tdc()*0.5) + (float)global.ref_ns)%25)/25;
  }
  global.ts_ref = -1;
  if ((ref_offset + global.ts_TDC1) < 9) {
    global.ts_ref = ref_offset + global.ts_TDC1;
  }
<end_block>

loop = <start_block>
  int tTS = digis.samples();
  tTS = tTS;
  int adc = digis[nTS].adc();
  adc = adc;
  int le_tdc = digis[nTS].le_tdc();
  le_tdc = le_tdc;
  int te_tdc = digis[nTS].te_tdc();
  te_tdc = te_tdc;
  int capid = digis[nTS].capid();
  capid = capid;
  int soi = digis[nTS].soi();
  soi = soi;
  float charge = adc2fC_QIE10_refl[ adc ] + 14.45;
  charge = charge;
<end_block>

<end_definition>
###########################################
<start_definition>
name = "ZeroData"
type = logger
log_file = "../log/zero_data.log"

pre_loop = <start_block>
  DetId detid_loc_z = digis.detid();
  HcalDetId hcaldetid_loc_z = HcalDetId(detid_loc_z);
  int iEta_loc_z = hcaldetid_loc_z.ieta();
  int iPhi_loc_z = hcaldetid_loc_z.iphi();
  int Depth_loc_z = hcaldetid_loc_z.depth();

  if (global.corrupt == 1) {
     <log> "#############" << endl;
     <log> "# BAD EVENT" << endl;
     <log> "# HF: " << Depth_loc_z << endl;
     <log> "# Slot: " << iPhi_loc_z << endl;
     <log> "# QIE: " << iEta_loc_z << endl;
     <log> "# nEV:" << _event_num << endl;
     <log> "#############" << endl;
     for (int iTS=0 ; iTS<10 ; iTS++) {
        <log> "TS:" << iTS << "  --  CID " << digis[iTS].capid() << "  --  ADC " << digis[iTS].adc() << "  --  leTDC " << digis[iTS].le_tdc() << "  --  teTDC " << digis[iTS].te_tdc() << endl;
     }
     <log> "#############" << endl;
  }
<end_block>

<end_definition>
##########################################
<start_suite>
name = "CapIDtesting"
code = 1
null = "General"
TH1F_perEV = "CapIDrot_EV" , "CapAllign_EV"
TH1F_perCH = "CapIDrot_CH" , "CapAllign_CH"
TH2F_perCH = "CIDvsTS_CH"
TH2F_perEV = "CIDvsTS_EV"
logger = "BadDataCID"
<end_suite>
###########################################
<start_definition>
name = "CIDvsTS_CH"
type = TH2F_perCH
nbinsx = tTS
lowx = -0.5
highx = (float)tTS - (float)0.5
titlex = "TS"
nbinsy = 4
lowy = -0.5
highy = 3.5
titley = "CID"

loop = <start_block>
  if (global.corrupt == 0) {
    <fill_perCH> ( nTS, capid );
  }
<end_block>

<end_definition>
##########################################
<start_definition>
name = "CIDvsTS_EV"
type = TH2F_perEV
nbinsx = tTS
lowx = -0.5
highx = (float)tTS - (float)0.5
titlex = "TS"
nbinsy = 4
lowy = -0.5
highy = 3.5
titley = "CID"

loop = <start_block>
  if (global.corrupt == 0) {
    <fill_perEV> ( nTS, capid );
  }
<end_block>

<end_definition>
##########################################
<start_definition>
name = "CapIDrot_CH"
type = TH1F_perCH
nbinsx = 7
lowx = -3.5
highx = 3.5
titlex = "CID(N) - (CID(N-1)+1)%4"

loop = <start_block>  
  if (nTS != 0) {
    if (global.corrupt == 0) {
      <fill_perCH> (capid - (digis[nTS-1].capid()+1)%4 );
    }
  }
<end_block>

<end_definition>
##########################################
<start_definition>
name = "CapIDrot_EV"
type = TH1F_perEV
nbinsx = 7
lowx = -3.5
highx = 3.5
titlex = "CID(N) - (CID(N-1)+1)%4"

loop = <start_block>  
  if (nTS != 0) {
    if (global.corrupt == 0) {
      <fill_perEV> (capid - (digis[nTS-1].capid()+1)%4 );
    }
  }
<end_block>

<end_definition>
##########################################
<start_definition>
name = "CapAllign_CH"
type = TH1F_perCH
nbinsx = 7
lowx = -3.5
highx = 3.5
titlex = "CID - CID_{0}"

loop_vars = <start_block>
  int* ch0_cid_ch = new int[10];
<end_block>

loop = <start_block>   
  if (nCH==0 || nCH==12) {
    global.ch0_cid_ch[nTS] = digis[nTS].capid();
  }
  if (global.corrupt == 0) {
    <fill_perCH> (capid - global.ch0_cid_ch[nTS]);
  }
<end_block>

<end_definition>
##########################################
<start_definition>
name = "CapAllign_EV"
type = TH1F_perEV
nbinsx = 7
lowx = -3.5
highx = 3.5
titlex = "CID - CID_{0}"

loop_vars = <start_block>
  int* ch0_cid_ev = new int[10];
<end_block>

loop = <start_block>   
  if (nCH == 0) {
    global.ch0_cid_ev[nTS] = digis[nTS].capid();
  }
  if (global.corrupt == 0) {
    <fill_perEV> (capid - global.ch0_cid_ev[nTS]);
  }
<end_block>

<end_definition>
##########################################
<start_definition>
name = "BadDataCID"
type = logger
log_file = "../log/bad_data_cid.log"

loop_vars = <start_block>
  bool bad_flag;
<end_block>

pre_loop = <start_block>
  DetId detid_loc = digis.detid();
  HcalDetId hcaldetid_loc = HcalDetId(detid_loc);
  int iEta_loc = hcaldetid_loc.ieta();
  int iPhi_loc = hcaldetid_loc.iphi();
  int Depth_loc = hcaldetid_loc.depth();

  global.bad_flag = 0;
  for (int iTS=1 ; iTS<10 ; iTS++) { 
    if ( (digis[iTS].capid() - (digis[iTS-1].capid()+1)%4) != 0 ) {
      global.bad_flag = 1;
    }
  }
  if (global.corrupt == 0) {
    if (global.bad_flag == 1) {
      <log> "#############" << endl;
      <log> "# BAD EVENT" << endl;
      <log> "# HF: " << Depth_loc << endl;
      <log> "# Slot: " << iPhi_loc << endl;
      <log> "# QIE: " << iEta_loc << endl;
      <log> "# nEV:" << _event_num << endl;
      <log> "#############" << endl;
      for (int iTS=0 ; iTS<10 ; iTS++) {
        if (( (digis[iTS].capid() - (digis[iTS-1].capid()+1)%4) != 0 ) && ( iTS != 0 )) {
          <log> "TS:" << iTS << "  --  CID " << digis[iTS].capid() << "  --  ADC " << digis[iTS].adc() << "  --  leTDC " << digis[iTS].le_tdc() << "  --  teTDC " << digis[iTS].te_tdc() << "  <<<<<<<<" << endl;
        }
        else {
          <log> "TS:" << iTS << "  --  CID " << digis[iTS].capid() << "  --  ADC " << digis[iTS].adc() << "  --  leTDC " << digis[iTS].le_tdc() << "  --  teTDC " << digis[iTS].te_tdc() << endl;
        }
      }
      <log> "#############" << endl;
    }
  }
<end_block>

<end_definition>
<start_suite>
name = "PedestalData"
code = 2
null = "General"
TH1F_perEV = "ADC_spectrum_EV" , "QSum_EV" ,  "Qav_EV" , "T_abs_EV" 
TH1F_perCH = "ADC_spectrum_CH" , "QSum_CH" ,  "Qav_CH" , "T_abs_CH"
TH2F_perEV = "ADCvsTS_EV" , "ADCvsCID_EV"
TH2F_perCH = "ADCvsTS_CH" , "ADCvsCID_CH"
logger = "BadDataPED"
<end_suite>
###########################################
<start_definition>
name = "BadDataPED"
type = logger
log_file = "../log/bad_data_ped.log"

loop_vars = <start_block>
  bool badped;
<end_block>

pre_loop = <start_block>
  global.badped = 0;
  for (int ii=0 ; ii <10 ; ii++) {
    if (digis[ii].adc() > 20) {
      global.badped = 1;
    }
  }
  if ( global.badped == 1 ) {
    DetId detid_p = digis.detid();
    HcalDetId hcaldetid_p = HcalDetId(detid_p);
    int iEta_p = hcaldetid_p.ieta();
    int iPhi_p = hcaldetid_p.iphi();
    int Depth_p = hcaldetid_p.depth();
    <log> "#############" << endl;
    <log> "# BAD EVENT" << endl;
    <log> "# HF: " << Depth_p << endl;
    <log> "# Slot: " << iPhi_p << endl;
    <log> "# QIE: " << iEta_p << endl;
    <log> "# nEV:" << _event_num << endl;
    <log> "#############" << endl;
  }
<end_block>

loop = <start_block>
  if ( global.badped == 1 ) {
    <log> "TS:" << nTS << "  --  CID " << capid << "  --  ADC " << adc << "  --  leTDC " << le_tdc << "  --  teTDC " << te_tdc << endl;
  }
<end_block>

post_loop = <start_block>
  if ( global.badped == 1 ) {
    <log> "#############" << endl; 
  }
<end_block>

<end_definition>
###########################################
<start_definition>
name = "ADC_spectrum_EV"
type = TH1F_perEV
nbinsx = 256
lowx = -0.5
highx = 255.5
titlex = "ADC"

loop = <start_block>
  if (global.corrupt == 0) {
    <fill_perEV> ( adc );
  }
<end_block>

<end_definition>
###########################################
<start_definition>
name = "ADC_spectrum_CH"
type = TH1F_perCH
nbinsx = 256
lowx = -0.5
highx = 255.5
titlex = "ADC"

loop = <start_block>
  if (global.corrupt == 0) {
    <fill_perCH> ( adc );
  }
<end_block>

<end_definition>
###########################################
<start_definition>
name = "ADCvsTS_CH"
type = TH2F_perCH
nbinsx = tTS
lowx = -0.5
highx = (float)tTS - (float)0.5
titlex = "TS"
nbinsy = 256
lowy = -0.5
highy = 255.5
titley = "ADC"

loop = <start_block>
  if (global.corrupt == 0) {
    <fill_perCH> ( nTS, adc );
  }
<end_block>

<end_definition>
##########################################
<start_definition>
name = "ADCvsTS_EV"
type = TH2F_perEV
nbinsx = tTS
lowx = -0.5
highx = (float)tTS - (float)0.5
titlex = "TS"
nbinsy = 256
lowy = -0.5
highy = 255.5
titley = "ADC"

loop = <start_block>
  if (global.corrupt == 0) {
    <fill_perEV> ( nTS, adc );
  }
<end_block>

<end_definition>
##########################################
<start_definition>
name = "QSum_EV"
type = TH1F_perEV
nbinsx = 50
lowx = 0
highx = 500
titlex = "Integrated Charge (fC)"

post_loop = <start_block>
  if (global.corrupt == 0) {
    <fill_perEV> ( global.qsum );
  }
<end_block>

<end_definition>
##########################################
<start_definition>
name = "QSum_CH"
type = TH1F_perCH
nbinsx = 50
lowx = 0
highx = 500
titlex = "Integrated Charge (fC)"

post_loop = <start_block>
  if (global.corrupt == 0) {
    <fill_perCH> ( global.qsum );
  }
<end_block>

<end_definition>
##########################################
<start_definition>
name = "Qav_EV"
type = TH1F_perEV
nbinsx = 50
lowx = 0
highx = 50
titlex = "Q (fC)"

post_loop = <start_block>
  if (global.corrupt == 0) {
    <fill_perEV> ( global.qsum / float(digis.samples()) );
  }
<end_block>

<end_definition>
###########################################
<start_definition>
name = "Qav_CH"
type = TH1F_perCH
nbinsx = 50
lowx = 0
highx = 50
titlex = "Q (fC)"

post_loop = <start_block>
  if (global.corrupt == 0) {
    <fill_perCH> ( global.qsum / float(digis.samples()) );
  }
<end_block>

<end_definition>
###########################################
<start_definition>
name = "ADCvsCID_EV"
type = TH2F_perEV
nbinsx = 4
lowx = -0.5
highx = 3.5
titlex = "CID"
nbinsy = 50
lowy = 0
highy = 50
titley = "ADC"

loop = <start_block>
  if (global.corrupt == 0) {
    <fill_perEV> ( capid , adc );
  }
<end_block>

<end_definition>
###########################################
<start_definition>
name = "ADCvsCID_CH"
type = TH2F_perCH
nbinsx = 4
lowx = -0.5
highx = 3.5
titlex = "CID"
nbinsy = 50
lowy = 0
highy = 50
titley = "ADC"

loop = <start_block>
  if (global.corrupt == 0) {
    <fill_perCH> ( capid , adc );
  }
<end_block>

<end_definition>
###########################################
<start_suite>
name = "AbsoluteTiming"
code = 3
null = "General"
TH1F_perEV = "T_abs_EV"
TH1F_perCH = "T_abs_CH"
TH2F_perEV = "TDCvsTS_EV" , "QvsTS_EV"
TH2F_perCH = "TDCvsTS_CH" , "QvsTS_CH"
<end_suite>
###########################################
<start_definition>
name = "T_abs_EV"
type = TH1F_perEV
nbinsx = 250
lowx = -0.5
highx = 249.5
titlex = "t (ns)"

post_loop = <start_block>
  if (global.t_abs > -1) {
    if (global.corrupt == 0) {
      <fill_perEV> (global.t_abs);
    }
  }
<end_block>

<end_definition>
###########################################
<start_definition>
name = "T_abs_CH"
type = TH1F_perCH
nbinsx = 250
lowx = -0.5
highx = 249.5
titlex = "t (ns)"

post_loop = <start_block>
  if (global.t_abs > -1) {
    if (global.corrupt == 0) {
      <fill_perCH> (global.t_abs);
    }
  }
<end_block>

<end_definition>
###########################################
<start_definition>
name = "TDCvsTS_CH"
type = TH2F_perCH
nbinsx = tTS
lowx = -0.5
highx = (float)tTS - (float)0.5
titlex = "TS"
nbinsy = 64
lowy = -0.5
highy = 63.5
titley = "TDC (0.5 ns)"

loop = <start_block>
  if (global.corrupt == 0) {
    <fill_perCH> ( nTS, le_tdc );
  }
<end_block>

<end_definition>
##########################################
<start_definition>
name = "TDCvsTS_EV"
type = TH2F_perEV
nbinsx = tTS
lowx = -0.5
highx = (float)tTS - (float)0.5
titlex = "TS"
nbinsy = 64
lowy = -0.5
highy = 63.5
titley = "TDC (0.5 ns)"

loop = <start_block>
  if (global.corrupt == 0) {
    <fill_perEV> ( nTS, le_tdc );
  }
<end_block>

<end_definition>
##########################################
<start_definition>
name = "QvsTS_CH"
type = TH2F_perCH
nbinsx = tTS
lowx = -0.5
highx = (float)tTS - (float)0.5
titlex = "TS"
nbinsy = 1000
lowy = 0
highy = 50000
titley = "Q (fC)"

loop = <start_block>
  if (global.corrupt == 0) {
    <fill_perCH> ( nTS, charge );
  }
<end_block>

<end_definition>
##########################################
<start_definition>
name = "QvsTS_EV"
type = TH2F_perEV
nbinsx = tTS
lowx = -0.5
highx = (float)tTS - (float)0.5
titlex = "TS"
nbinsy = 1000
lowy = 0
highy = 50000
titley = "Q (fC)"

loop = <start_block>
  if (global.corrupt == 0) {
    <fill_perEV> ( nTS, charge );
  }
<end_block>

<end_definition>
##########################################
<start_suite>
name = "PedScanner"
code = 4
null = "General"
TH1F_perCH = "DefaultPed_CH"
TH1F_perEV = "DefaultPed_EV"
TH2F_perCH = "PedScanADC_CH" , "PedScanQ_CH" , "PedScanQav_CH"
TH2F_perEV = "PedScanADC_EV" , "PedScanQ_EV" , "PedScanQav_EV"
<end_suite>
###########################################
<start_definition>
name = "DefaultPed_CH"
type = TH1F_perCH
nbinsx = 256
lowx = -0.5
highx = 255.5
titlex = "ADC"

loop = <start_block>
  if ( val.at(0) == 38.0 ) {
    if (global.corrupt == 0) {
      <fill_perCH> ( adc );
    }
  }
<end_block>

<end_definition>
###########################################
<start_definition>
name = "DefaultPed_EV"
type = TH1F_perEV
nbinsx = 256
lowx = -0.5
highx = 255.5
titlex = "ADC"

loop = <start_block>
  if ( val.at(0) == 38.0 ) {
    if (global.corrupt == 0) {
      <fill_perEV> ( adc );
    }
  }
<end_block>

<end_definition>
##########################################
<start_definition>
name = "PedScanADC_CH"
type = TH2F_perCH
nbinsx = 63
lowx = -31.5
highx = 31.5
titlex = "Pedestal Offset (DAC)"
nbinsy = 32
lowy = -0.5
highy = 31.5
titley = "Pedestal (ADC)"

loop = <start_block>
  if (global.corrupt == 0) {
    <fill_perCH> ( global.pdac2poff[(int)val.at(0)] , adc);
  }
<end_block>

<end_definition>
##########################################
<start_definition>
name = "PedScanADC_EV"
type = TH2F_perEV
nbinsx = 63
lowx = -31.5
highx = 31.5
titlex = "Pedestal Offset (DAC)"
nbinsy = 32
lowy = -0.5
highy = 31.5
titley = "Pedestal (ADC)"

loop = <start_block>
  if (global.corrupt == 0) {
    <fill_perEV> ( global.pdac2poff[(int)val.at(0)] , adc);
  }
<end_block>

<end_definition>
##########################################
<start_definition>
name = "PedScanQ_CH"
type = TH2F_perCH
nbinsx = 63
lowx = -31.5
highx = 31.5
titlex = "PedestalDAC"
nbinsy = 75
lowy = -0.5
highy = 74.5
titley = "Charge (fC)"

loop = <start_block>
  if (global.corrupt == 0) {
    <fill_perCH> ( global.pdac2poff[(int)val.at(0)] , charge);
  }
<end_block>

<end_definition>
##########################################
<start_definition>
name = "PedScanQ_EV"
type = TH2F_perEV
nbinsx = 63
lowx = -31.5
highx = 31.5
titlex = "PedestalDAC"
nbinsy = 75
lowy = -0.5
highy = 74.5
titley = "Charge (fC)"

loop = <start_block>
  if (global.corrupt == 0) {
    <fill_perEV> ( global.pdac2poff[(int)val.at(0)] , charge);
  }
<end_block>

<end_definition>
##########################################
<start_definition>
name = "PedScanQav_CH"
type = TH2F_perCH
nbinsx = 63
lowx = -31.5
highx = 31.5
titlex = "PedestalDAC"
nbinsy = 75
lowy = -0.5
highy = 74.5
titley = "Charge (fC)"

post_loop = <start_block>
  if (global.corrupt == 0) {
    <fill_perCH> ( global.pdac2poff[(int)val.at(0)] , global.qsum/(float)digis.samples() );
  }
<end_block>

<end_definition>
##########################################
<start_definition>
name = "PedScanQav_EV"
type = TH2F_perEV
nbinsx = 63
lowx = -31.5
highx = 31.5
titlex = "PedestalDAC"
nbinsy = 75
lowy = -0.5
highy = 74.5
titley = "Charge (fC)"

post_loop = <start_block>
  if (global.corrupt == 0) {
    <fill_perEV> ( global.pdac2poff[(int)val.at(0)] , global.qsum/(float)digis.samples() );
  }
<end_block>

<end_definition>
##########################################
<start_suite>
name = "PhaseScanner"
code = 5
null = "General"
TH1F_perEV = "T_abs_EV"
TH1F_perCH = "T_abs_CH"
TH2F_perCH = "phase_scan_CH" , "rawTDC_vs_phase_CH" , "phase_scan_CID_CH" , "CID0_vs_phase_CH", "CIDpulse_vs_phase_CH", "phase_scan_TETDC_CH"
TH2F_perEV = "phase_scan_EV" , "rawTDC_vs_phase_EV" , "phase_scan_CID_EV"
<end_suite>
###########################################
<start_definition>
name = "phase_scan_EV"
type = TH2F_perEV
nbinsx = 100
lowx = -0.25
highx = 49.75
titlex = "phase (ns)"
nbinsy = 250
lowy = -0.5
highy = 249.5
titley = "Pulse Arrival Time (ns)"

post_loop = <start_block>
  if (global.t_abs > -1) {
    if (global.corrupt == 0) {
      <fill_perEV> ( global.ph2ns[(int)val.at(0)] , global.t_abs);
    }
  }
<end_block>

<end_definition>
###########################################
<start_definition>
name = "phase_scan_CH"
type = TH2F_perCH
nbinsx = 100
lowx = -0.25
highx = 49.75
titlex = "phase (ns)"
nbinsy = 250
lowy = -0.5
highy = 249.5
titley = "Pulse Arrival Time (ns)"

post_loop = <start_block>
  if (global.t_abs > -1) {
    if (global.corrupt == 0) {
      <fill_perCH> ( global.ph2ns[(int)val.at(0)] , global.t_abs);
    }
  }
<end_block>

<end_definition>
###########################################
<start_definition>
name = "rawTDC_vs_phase_CH"
type = TH2F_perCH
nbinsx = 100
lowx = -0.25
highx = 49.75
titlex = "phase (ns)"
nbinsy = 64
lowy = -0.25
highy = 31.75
titley = "TDC (ns)"

post_loop = <start_block>
  if (global.ts_TDC1 > -1) {
    if (global.corrupt == 0) {
      <fill_perCH> ( global.ph2ns[(int)val.at(0)] , digis[global.ts_TDC1].le_tdc()*0.5);
    }
  }
<end_block>

<end_definition>
###########################################
<start_definition>
name = "rawTDC_vs_phase_EV"
type = TH2F_perEV
nbinsx = 100
lowx = -0.25
highx = 49.75
titlex = "phase (ns)"
nbinsy = 64
lowy = -0.25
highy = 31.75
titley = "TDC (ns)"

post_loop = <start_block>
  if (global.ts_TDC1 > -1) {
    if (global.corrupt == 0) {
      <fill_perEV> ( global.ph2ns[(int)val.at(0)] , digis[global.ts_TDC1].le_tdc()*0.5);
    }
  }
<end_block>

<end_definition>
###########################################
<start_definition>
name = "CID0_vs_phase_CH"
type = TH2F_perCH
nbinsx = 100
lowx = -0.25
highx = 49.75
titlex = "phase (ns)"
nbinsy = 4
lowy = -0.5
highy = 3.5
titley = "TDC (ns)"

post_loop = <start_block>
    if (global.corrupt == 0) {
      <fill_perCH> ( global.ph2ns[(int)val.at(0)] , digis[0].capid());
    }
<end_block>

<end_definition>
###########################################
<start_definition>
name = "CIDpulse_vs_phase_CH"
type = TH2F_perCH
nbinsx = 100
lowx = -0.25
highx = 49.75
titlex = "phase (ns)"
nbinsy = 4
lowy = -0.5
highy = 3.5
titley = "TDC (ns)"

post_loop = <start_block>
  if (global.ts_TDC1 > -1){
    if (global.corrupt == 0) {
      <fill_perCH> ( global.ph2ns[(int)val.at(0)] , digis[global.ts_TDC1].capid());
    }
  }
<end_block>

<end_definition>
###########################################
<start_definition>
name = "phase_scan_CID_EV"
type = TH2F_perEV
nbinsx = 100
lowx = -0.25
highx = 49.75
titlex = "phase (ns)"
nbinsy = 250
lowy = -0.5
highy = 249.5
titley = "TDC weighted by CID (ns)"

post_loop = <start_block>
  if (global.cid_TDC1 > -1) {
    if (global.corrupt == 0) {
      <fill_perEV> ( global.ph2ns[(int)val.at(0)] , global.t_cid);
    }
  }
<end_block>

<end_definition>
###########################################
<start_definition>
name = "phase_scan_CID_CH"
type = TH2F_perCH
nbinsx = 100
lowx = -0.25
highx = 49.75
titlex = "phase (ns)"
nbinsy = 250
lowy = -0.5
highy = 249.5
titley = "TDC weighted by CID (ns)"

post_loop = <start_block>
  if (global.cid_TDC1 > -1) {
    if (global.corrupt == 0) {
      <fill_perCH> ( global.ph2ns[(int)val.at(0)] , global.t_cid);
    }
  }
<end_block>

<end_definition>


###########################################
<start_definition>
name = "phase_scan_TETDC_CH"
type = TH2F_perCH
nbinsx = 100
lowx = -0.25
highx = 49.75
titlex = "phase (ns)"
nbinsy = 32
lowy = -0.5
highy = 31.5
titley = "TETDC"

post_loop = <start_block>
  if (global.cid_TDC1 > -1) {
    if (global.corrupt == 0) {
      <fill_perCH> ( global.ph2ns[(int)val.at(0)] , digis[0].te_tdc());
    }
  }
<end_block>

<end_definition>
###########################################
<start_suite>
name = "ICIScanner"
code = 6
null = "General"
TH1F_perCH = "T_abs_CH" , "qratio_ICI7_CH"
TH1F_perEV = "T_abs_EV" 
TH2F_perCH = "ici_scan_CH" , "qratio_CH" , "BADratio_CH" , "OutflowA_CH" , "OutflowR_CH" , "pulse_ICI0_CH" , "pulse_ICI1_CH" , "pulse_ICI2_CH" , "pulse_ICI3_CH"  , "pulse_ICI4_CH" , "pulse_ICI5_CH" , "pulse_ICI6_CH" , "pulse_ICI7_CH" , "TDCvsTS_CH"
TH2F_perEV = "ici_scan_EV" , "qratio_EV" , "OutflowA_EV" , "OutflowR_EV"
TProfile = "qratio_PR"
<end_suite>
###########################################
<start_definition>
name = "ici_scan_CH"
type = TH2F_perCH
nbinsx = 200
lowx = 0
highx = 10000
titlex = "Nominal Injected Charge (fC)"
nbinsy = 200
lowy = 0
highy = 10000
titley = "Integrated Charge (fC)"

post_loop = <start_block>
  if (val.at(0) < 8 ) {
    if (global.corrupt == 0) {
      <fill_perCH> ( global.ici2q[(int)val.at(0)] , global.qsum );
    }
  }
<end_block>

<end_definition>
###########################################
<start_definition>
name = "ici_scan_EV"
type = TH2F_perEV
nbinsx = 200
lowx = 0
highx = 10000
titlex = "Nominal Injected Charge (fC)"
nbinsy = 200
lowy = 0
highy = 10000
titley = "Integrated Charge (fC)"

post_loop = <start_block>
  if (val.at(0) < 8 ) {
    if (global.corrupt == 0) {
      <fill_perEV> ( global.ici2q[(int)val.at(0)] , global.qsum );
    }
  }
<end_block>

<end_definition>
###########################################
<start_definition>
name = "qratio_CH"
type = TH2F_perCH
nbinsx = 8
lowx = -0.5
highx = 7.5
titlex = "ICI setting"
nbinsy = 100
lowy = 0
highy = 1
titley = "Ratio (Q_{max-1}+Q_{max}+Q_{max+1})/Q_{sum}"

post_loop = <start_block>
  if (global.corrupt == 0) {
    <fill_perCH> ( val.at(0) , global.qmax3 / global.qsum );
  }
<end_block>

<end_definition>
###########################################
<start_definition>
name = "qratio_EV"
type = TH2F_perEV
nbinsx = 8
lowx = -0.5
highx = 7.5
titlex = "ICI setting"
nbinsy = 100
lowy = 0
highy = 1
titley = "Ratio (Q_{max-1}+Q_{max}+Q_{max+1})/Q_{sum}"

post_loop = <start_block>
  if (global.corrupt == 0) {
    <fill_perEV> ( val.at(0) , global.qmax3 / global.qsum );
  }
<end_block>

<end_definition>
###########################################
<start_definition>
name = "qratio_PR"
type = TProfile
nbinsx = 26
lowx = -0.05
highx = 2.55
titlex = "LED Bias Voltage (V)"
nbinsy = 100
lowy = 0
highy = 1
titley = "Ratio (Q_{max-1}+Q_{max}+Q_{max+1})/Q_{sum}"

post_loop = <start_block>
  if (global.qmax3 > -1) {
    if ( global.corrupt == 0 ) {
      <fill_perCH> ( val.at(0) , global.qmax3 / global.qsum );
    }
  }
<end_block>

<end_definition>
###########################################
<start_definition>
name = "BADratio_CH"
type = TH2F_perCH
nbinsx = 200
lowx = 0
highx = 10000
titlex = "Injected Change (fC)"
nbinsy = 100
lowy = 0
highy = 1
titley = "Ratio Q_{max+4}/Q_{max}"

post_loop = <start_block>
  if (global.corrupt == 0) {
    <fill_perCH> ( (adc2fC_QIE10_refl[ digis[global.ts_max].adc() ] + 14.45) , (adc2fC_QIE10_refl[ digis[global.ts_max+4].adc() ] + 14.45) /  (adc2fC_QIE10_refl[ digis[global.ts_max].adc() ] + 14.45) );
  }
<end_block>

<end_definition>
###########################################
<start_definition>
name = "qratio_ICI7_CH"
type = TH1F_perCH
nbinsx = 100
lowx = 0
highx = 1
titlex = "Ratio Q_{max}/Q_{sum}"

post_loop = <start_block>
  if ( val.at(0) == 7 ) {
    if (global.corrupt == 0) {
      <fill_perCH> ( global.qmax3 / global.qsum );
    }
  }
<end_block>

<end_definition>
###########################################
<start_definition>
name = "OutflowA_CH"
type = TH2F_perCH
nbinsx = 200
lowx = 0
highx = 10000
titlex = "Injected Charge (fC)"
nbinsy = 200
lowy = 0
highy = 10000
titley = "Dissipated Charge: Q_{max}-Q_{max+4} (fC)"

loop = <start_block>
  if (global.corrupt == 0) {
    if (global.ts_max < (digis.samples()-4) ) {
      <fill_perCH> ( (adc2fC_QIE10_refl[ digis[global.ts_max].adc() ] + 14.45) , (adc2fC_QIE10_refl[ digis[global.ts_max].adc() ] + 14.45) - (adc2fC_QIE10_refl[ digis[global.ts_max+4].adc() ] + 14.45) );
    }
  }
<end_block>

<end_definition>
###########################################
<start_definition>
name = "OutflowR_CH"
type = TH2F_perCH
nbinsx = 200
lowx = 0
highx = 10000
titlex = "Injected Charge (fC)"
nbinsy = 200
lowy = 0
highy = 10000
titley = "Dissipated Charge Ratio: (Q_{max}-Q_{max+4})/Qmax (fC)"

loop = <start_block>
  if (global.corrupt == 0) {
    if (global.ts_max < (digis.samples()-4) ) {
      <fill_perCH> ( (adc2fC_QIE10_refl[ digis[global.ts_max].adc() ] + 14.45) , ((adc2fC_QIE10_refl[ digis[global.ts_max].adc() ] + 14.45) - (adc2fC_QIE10_refl[ digis[global.ts_max+4].adc() ] + 14.45)) / (adc2fC_QIE10_refl[ digis[global.ts_max].adc() ] + 14.45) );
    }
  }
<end_block>

<end_definition>
###########################################
<start_definition>
name = "OutflowA_EV"
type = TH2F_perEV
nbinsx = 200
lowx = 0
highx = 10000
titlex = "Injected Charge (fC)"
nbinsy = 200
lowy = 0
highy = 10000
titley = "Dissipated Charge: Q_{max}-Q_{max+4} (fC)"

loop = <start_block>
  if (global.corrupt == 0) {
    if (global.ts_max < (digis.samples()-4) ) {
      <fill_perEV> ( (adc2fC_QIE10_refl[ digis[global.ts_max].adc() ] + 14.45) , (adc2fC_QIE10_refl[ digis[global.ts_max].adc() ] + 14.45) - (adc2fC_QIE10_refl[ digis[global.ts_max+4].adc() ] + 14.45) );
    }
  }
<end_block>

<end_definition>
###########################################
<start_definition>
name = "OutflowR_EV"
type = TH2F_perEV
nbinsx = 200
lowx = 0
highx = 10000
titlex = "Injected Charge (fC)"
nbinsy = 200
lowy = 0
highy = 10000
titley = "Dissipated Charge Ratio: (Q_{max}-Q_{max+4})/Q_{max} (fC)"

loop = <start_block>
  if (global.corrupt == 0) {
    if (global.ts_max < (digis.samples()-4) ) {
      <fill_perEV> ( (adc2fC_QIE10_refl[ digis[global.ts_max].adc() ] + 14.45) , ((adc2fC_QIE10_refl[ digis[global.ts_max].adc() ] + 14.45) - (adc2fC_QIE10_refl[ digis[global.ts_max+4].adc() ] + 14.45)) / (adc2fC_QIE10_refl[ digis[global.ts_max].adc() ] + 14.45) );
    }
  }
<end_block>

<end_definition>
###########################################
<start_definition>
name = "pulse_ICI0_CH"
type = TH2F_perCH
nbinsx = 10
lowx = -0.5
highx = 9.5
titlex = "TS"
nbinsy = 256
lowy = -0.5
highy = 255.5
titley = "ADC"

loop = <start_block>
  if ( val.at(0) == 0 ) {
    <fill_perCH> ( nTS, adc );
  }
<end_block>

<end_definition>
###########################################
<start_definition>
name = "pulse_ICI1_CH"
type = TH2F_perCH
nbinsx = 10
lowx = -0.5
highx = 9.5
titlex = "TS"
nbinsy = 256
lowy = -0.5
highy = 255.5
titley = "ADC"

loop = <start_block>
  if ( val.at(0) == 1 ) {
    <fill_perCH> ( nTS, adc );
  }
<end_block>

<end_definition>
###########################################
<start_definition>
name = "pulse_ICI2_CH"
type = TH2F_perCH
nbinsx = 10
lowx = -0.5
highx = 9.5
titlex = "TS"
nbinsy = 256
lowy = -0.5
highy = 255.5
titley = "ADC"

loop = <start_block>
  if ( val.at(0) == 2 ) {
    <fill_perCH> ( nTS, adc );
  }
<end_block>

<end_definition>
###########################################
<start_definition>
name = "pulse_ICI3_CH"
type = TH2F_perCH
nbinsx = 10
lowx = -0.5
highx = 9.5
titlex = "TS"
nbinsy = 256
lowy = -0.5
highy = 255.5
titley = "ADC"

loop = <start_block>
  if ( val.at(0) == 3 ) {
    <fill_perCH> ( nTS, adc );
  }
<end_block>

<end_definition>
###########################################
<start_definition>
name = "pulse_ICI4_CH"
type = TH2F_perCH
nbinsx = 10
lowx = -0.5
highx = 9.5
titlex = "TS"
nbinsy = 256
lowy = -0.5
highy = 255.5
titley = "ADC"

loop = <start_block>
  if ( val.at(0) == 4 ) {
    <fill_perCH> ( nTS, adc );
  }
<end_block>

<end_definition>
###########################################
<start_definition>
name = "pulse_ICI5_CH"
type = TH2F_perCH
nbinsx = 10
lowx = -0.5
highx = 9.5
titlex = "TS"
nbinsy = 256
lowy = -0.5
highy = 255.5
titley = "ADC"

loop = <start_block>
  if ( val.at(0) == 5 ) {
    <fill_perCH> ( nTS, adc );
  }
<end_block>

<end_definition>
###########################################
<start_definition>
name = "pulse_ICI6_CH"
type = TH2F_perCH
nbinsx = 10
lowx = -0.5
highx = 9.5
titlex = "TS"
nbinsy = 256
lowy = -0.5
highy = 255.5
titley = "ADC"

loop = <start_block>
  if ( val.at(0) == 6 ) {
    <fill_perCH> ( nTS, adc );
  }
<end_block>

<end_definition>
###########################################
<start_definition>
name = "pulse_ICI7_CH"
type = TH2F_perCH
nbinsx = 10
lowx = -0.5
highx = 9.5
titlex = "TS"
nbinsy = 256
lowy = -0.5
highy = 255.5
titley = "ADC"

loop = <start_block>
  if ( val.at(0) == 7 ) {
    <fill_perCH> ( nTS, adc );
  }
<end_block>

<end_definition>
###########################################
<start_suite>
name = "LED_Vb_Scan"
code = 7
null = "General"
TH2F_perCH = "Qsum_vs_Vb_CH" , "TDCvsTS_CH" , "ADCvsTS_CH" , "qratio_CH" , "QvsTS_2.5V" , "ADCvsTS_2.5V" , "TDCvsTS_2.5V" , "QvsTS_2.0V" , "ADCvsTS_2.0V" , "TDCvsTS_2.0V", "ADCvsTDC"
TH2F_perEV = "Qsum_vs_Vb_EV" , "TDCvsTS_EV" , "qratio_EV"
TProfile   = "Qsum_vs_Vb_PR" , "qratio_PR"
<end_suite>
###########################################
<start_definition>
name = "Qsum_vs_Vb_CH"
type = TH2F_perCH
nbinsx = 26
lowx = -0.05
highx = 2.55
titlex = "LED Bias Voltage (V)"
nbinsy = 200
lowy = 0
highy = 30000
titley = "Q (fC)"

post_loop = <start_block>
  if ( global.corrupt == 0 ) {
    <fill_perCH> ( val.at(0) , global.qsum );
  }
<end_block>

<end_definition>
###########################################
<start_definition>
name = "Qsum_vs_Vb_PR"
type = TProfile
nbinsx = 26
lowx = -0.05
highx = 2.55
titlex = "LED Bias Voltage (V)"
nbinsy = 200
lowy = 0
highy = 30000
titley = "Q (fC)"

post_loop = <start_block>
  if ( global.corrupt == 0 ) {
    <fill_perCH> ( val.at(0) , global.qsum );
  }
<end_block>

<end_definition>
###########################################
<start_definition>
name = "Qsum_vs_Vb_EV"
type = TH2F_perEV
nbinsx = 26
lowx = -0.05
highx = 2.55
titlex = "LED Bias Voltage (V)"
nbinsy = 200
lowy = 0
highy = 30000
titley = "Q (fC)"

post_loop = <start_block>
  if ( global.corrupt == 0 ) {
    <fill_perEV> ( val.at(0) , global.qsum );
  }
<end_block>

<end_definition>
###########################################
<start_definition>
name = "QvsTS_2.5V"
type = TH2F_perCH
nbinsx = 10
lowx = -0.5
highx = 9.5
titlex = "TS"
nbinsy = 256
lowy = 0
highy = 40000
titley = "Q (fC)"

loop = <start_block>
  if ( val.at(0) == 2.5 ) {
    <fill_perCH> (nTS,charge);
  }
<end_block>

<end_definition>
###########################################
<start_definition>
name = "ADCvsTS_2.5V"
type = TH2F_perCH
nbinsx = 10
lowx = -0.5
highx = 9.5
titlex = "TS"
nbinsy = 256
lowy = -0.5
highy = 255.5
titley = "ADC"

loop = <start_block>
  if ( val.at(0) == 2.5 ) {
    <fill_perCH> (nTS,adc);
  }
<end_block>

<end_definition>
###########################################
<start_definition>
name = "TDCvsTS_2.5V"
type = TH2F_perCH
nbinsx = 10
lowx = -0.5
highx = 9.5
titlex = "TS"
nbinsy = 64
lowy = -0.5
highy = 63.5
titley = "TDC (0.5 ns)"

loop = <start_block>
  if ( val.at(0) == 2.5 ) {
    <fill_perCH> (nTS,le_tdc);
  }
<end_block>

<end_definition>
###########################################
<start_definition>
name = "QvsTS_2.0V"
type = TH2F_perCH
nbinsx = 10
lowx = -0.5
highx = 9.5
titlex = "TS"
nbinsy = 256
lowy = 0
highy = 40000
titley = "Q (fC)"

loop = <start_block>
  if ( val.at(0) == 2.0 ) {
    <fill_perCH> (nTS,charge);
  }
<end_block>

<end_definition>
###########################################
<start_definition>
name = "ADCvsTS_2.0V"
type = TH2F_perCH
nbinsx = 10
lowx = -0.5
highx = 9.5
titlex = "TS"
nbinsy = 256
lowy = -0.5
highy = 255.5
titley = "ADC"

loop = <start_block>
  if ( val.at(0) == 2.0 ) {
    <fill_perCH> (nTS,adc);
  }
<end_block>

<end_definition>
###########################################
<start_definition>
name = "TDCvsTS_2.0V"
type = TH2F_perCH
nbinsx = 10
lowx = -0.5
highx = 9.5
titlex = "TS"
nbinsy = 64
lowy = -0.5
highy = 63.5
titley = "TDC (0.5 ns)"

loop = <start_block>
  if ( val.at(0) == 2.0 ) {
    <fill_perCH> (nTS,le_tdc);
  }
<end_block>

<end_definition>
###########################################
<start_definition>
name = "ADCvsTDC"
type = TH2F_perCH
nbinsx = 64
lowx = -0.5
highx = 63.5
titlex = "TDC"
nbinsy = 256
lowy = -0.5
highy = 255.5
titley = "ADC"

loop = <start_block>
  <fill_perCH> (le_tdc,adc);
<end_block>

<end_definition>

###########################################
<start_suite>
name = "RinSel_Scan"
code = 8
null = "General"
TH2F_perCH = "qratio_CH" , "refabs_vs_rin_CH" , "refrat_vs_rin_CH" , "ADCvsTS_Rin0" , "ADCvsTS_Rin1" , "ADCvsTS_Rin2" , "ADCvsTS_Rin3" , "ADCvsTS_Rin4" , "ADCvsTS_Rin5" , "ADCvsTS_Rin6" , "ADCvsTS_Rin7" , "ADCvsTS_Rin8" , "ADCvsTS_Rin9" , "ADCvsTS_Rin10" , "ADCvsTS_Rin11" , "ADCvsTS_Rin12" , "ADCvsTS_Rin13" , "ADCvsTS_Rin14" , "ADCvsTS_Rin15"
TH2F_perEV = "qratio_EV", "refrat_vs_rin_EV" , "refabs_vs_rin_EV"
TProfile = "qratio_PR"
<end_suite>
###########################################
<start_definition>
name = "refrat_vs_rin_CH"
type = TH2F_perCH
nbinsx = 16
lowx = -0.5
highx = 15.5
titlex = "RinSel Value"
nbinsy = 100
lowy = 0
highy = 1
titley = "Q_{ref}/Q_{main_peak}"

post_loop = <start_block>
  if ( global.corrupt == 0 ) {
    if (global.ts_ref > -1) {
      <fill_perCH> ( val.at(0) , (adc2fC_QIE10_refl[ digis[global.ts_ref].adc() ] + adc2fC_QIE10_refl[ digis[global.ts_ref+1].adc() ] + (2*14.45)) / global.qmax3 );
    }
  }
<end_block>

<end_definition>
###########################################
<start_definition>
name = "refrat_vs_rin_EV"
type = TH2F_perEV
nbinsx = 16
lowx = -0.5
highx = 15.5
titlex = "RinSel Value"
nbinsy = 100
lowy = 0
highy = 1
titley = "Q_{ref}/Q_{main_peak}"

post_loop = <start_block>
  if ( global.corrupt == 0 ) {
    if (global.ts_ref > -1) {
      <fill_perEV> ( val.at(0) , (adc2fC_QIE10_refl[ digis[global.ts_ref].adc() ] + adc2fC_QIE10_refl[ digis[global.ts_ref+1].adc() ] + (2*14.45)) / global.qmax3 );
    }
  }
<end_block>

<end_definition>
###########################################
<start_definition>
name = "refabs_vs_rin_CH"
type = TH2F_perCH
nbinsx = 16
lowx = -0.5
highx = 15.5
titlex = "RinSel Value"
nbinsy = 400
lowy = -200
highy = 200
titley = "Q_{ref} (fC)"

post_loop = <start_block>
  if ( global.corrupt == 0 ) {
    if (global.ts_ref > -1) {
      <fill_perCH> ( val.at(0) , (adc2fC_QIE10_refl[ digis[global.ts_ref].adc() ] + adc2fC_QIE10_refl[ digis[global.ts_ref+1].adc() ] - (2*adc2fC_QIE10_refl[ digis[0].adc() ])) );
    }
  }
<end_block>

<end_definition>
###########################################
<start_definition>
name = "refabs_vs_rin_EV"
type = TH2F_perEV
nbinsx = 16
lowx = -0.5
highx = 15.5
titlex = "RinSel Value"
nbinsy = 256
lowy = -0.5
highy = 255.5
titley = "Q_{ref} (fC)"

post_loop = <start_block>
  if ( global.corrupt == 0 ) {
    if (global.ts_ref > -1) {
      <fill_perEV> ( val.at(0) , (adc2fC_QIE10_refl[ digis[global.ts_ref].adc() ] + adc2fC_QIE10_refl[ digis[global.ts_ref+1].adc() ] + (2*14.45)));
    }
  }
<end_block>

<end_definition>
###########################################
<start_definition>
name = "ADCvsTS_Rin0"
type = TH2F_perCH
nbinsx = 10
lowx = -0.5
highx = 9.5
titlex = "TS"
nbinsy = 256
lowy = -0.5
highy = 255.5
titley = "ADC"

loop = <start_block>
  if ( val.at(0) == 0 ) {
    <fill_perCH> (nTS,adc);
  }
<end_block>

<end_definition>
###########################################
<start_definition>
name = "ADCvsTS_Rin1"
type = TH2F_perCH
nbinsx = 10
lowx = -0.5
highx = 9.5
titlex = "TS"
nbinsy = 256
lowy = -0.5
highy = 255.5
titley = "ADC"

loop = <start_block>
  if ( val.at(0) == 1 ) {
    <fill_perCH> (nTS,adc);
  }
<end_block>

<end_definition>
###########################################
<start_definition>
name = "ADCvsTS_Rin2"
type = TH2F_perCH
nbinsx = 10
lowx = -0.5
highx = 9.5
titlex = "TS"
nbinsy = 256
lowy = -0.5
highy = 255.5
titley = "ADC"

loop = <start_block>
  if ( val.at(0) == 2 ) {
    <fill_perCH> (nTS,adc);
  }
<end_block>

<end_definition>
###########################################
<start_definition>
name = "ADCvsTS_Rin3"
type = TH2F_perCH
nbinsx = 10
lowx = -0.5
highx = 9.5
titlex = "TS"
nbinsy = 256
lowy = -0.5
highy = 255.5
titley = "ADC"

loop = <start_block>
  if ( val.at(0) == 3 ) {
    <fill_perCH> (nTS,adc);
  }
<end_block>

<end_definition>
###########################################
<start_definition>
name = "ADCvsTS_Rin4"
type = TH2F_perCH
nbinsx = 10
lowx = -0.5
highx = 9.5
titlex = "TS"
nbinsy = 256
lowy = -0.5
highy = 255.5
titley = "ADC"

loop = <start_block>
  if ( val.at(0) == 4 ) {
    <fill_perCH> (nTS,adc);
  }
<end_block>

<end_definition>
###########################################
<start_definition>
name = "ADCvsTS_Rin5"
type = TH2F_perCH
nbinsx = 10
lowx = -0.5
highx = 9.5
titlex = "TS"
nbinsy = 256
lowy = -0.5
highy = 255.5
titley = "ADC"

loop = <start_block>
  if ( val.at(0) == 5 ) {
    <fill_perCH> (nTS,adc);
  }
<end_block>

<end_definition>
###########################################
<start_definition>
name = "ADCvsTS_Rin6"
type = TH2F_perCH
nbinsx = 10
lowx = -0.5
highx = 9.5
titlex = "TS"
nbinsy = 256
lowy = -0.5
highy = 255.5
titley = "ADC"

loop = <start_block>
  if ( val.at(0) == 6 ) {
    <fill_perCH> (nTS,adc);
  }
<end_block>

<end_definition>
###########################################
<start_definition>
name = "ADCvsTS_Rin7"
type = TH2F_perCH
nbinsx = 10
lowx = -0.5
highx = 9.5
titlex = "TS"
nbinsy = 256
lowy = -0.5
highy = 255.5
titley = "ADC"

loop = <start_block>
  if ( val.at(0) == 7 ) {
    <fill_perCH> (nTS,adc);
  }
<end_block>

<end_definition>
###########################################
<start_definition>
name = "ADCvsTS_Rin8"
type = TH2F_perCH
nbinsx = 10
lowx = -0.5
highx = 9.5
titlex = "TS"
nbinsy = 256
lowy = -0.5
highy = 255.5
titley = "ADC"

loop = <start_block>
  if ( val.at(0) == 8 ) {
    <fill_perCH> (nTS,adc);
  }
<end_block>

<end_definition>
###########################################
<start_definition>
name = "ADCvsTS_Rin9"
type = TH2F_perCH
nbinsx = 10
lowx = -0.5
highx = 9.5
titlex = "TS"
nbinsy = 256
lowy = -0.5
highy = 255.5
titley = "ADC"

loop = <start_block>
  if ( val.at(0) == 9 ) {
    <fill_perCH> (nTS,adc);
  }
<end_block>

<end_definition>
###########################################
<start_definition>
name = "ADCvsTS_Rin10"
type = TH2F_perCH
nbinsx = 10
lowx = -0.5
highx = 9.5
titlex = "TS"
nbinsy = 256
lowy = -0.5
highy = 255.5
titley = "ADC"

loop = <start_block>
  if ( val.at(0) == 10 ) {
    <fill_perCH> (nTS,adc);
  }
<end_block>

<end_definition>
###########################################
<start_definition>
name = "ADCvsTS_Rin11"
type = TH2F_perCH
nbinsx = 10
lowx = -0.5
highx = 9.5
titlex = "TS"
nbinsy = 256
lowy = -0.5
highy = 255.5
titley = "ADC"

loop = <start_block>
  if ( val.at(0) == 11 ) {
    <fill_perCH> (nTS,adc);
  }
<end_block>

<end_definition>
###########################################
<start_definition>
name = "ADCvsTS_Rin12"
type = TH2F_perCH
nbinsx = 10
lowx = -0.5
highx = 9.5
titlex = "TS"
nbinsy = 256
lowy = -0.5
highy = 255.5
titley = "ADC"

loop = <start_block>
  if ( val.at(0) == 12 ) {
    <fill_perCH> (nTS,adc);
  }
<end_block>

<end_definition>
###########################################
<start_definition>
name = "ADCvsTS_Rin13"
type = TH2F_perCH
nbinsx = 10
lowx = -0.5
highx = 9.5
titlex = "TS"
nbinsy = 256
lowy = -0.5
highy = 255.5
titley = "ADC"

loop = <start_block>
  if ( val.at(0) == 13 ) {
    <fill_perCH> (nTS,adc);
  }
<end_block>

<end_definition>
###########################################
<start_definition>
name = "ADCvsTS_Rin14"
type = TH2F_perCH
nbinsx = 10
lowx = -0.5
highx = 9.5
titlex = "TS"
nbinsy = 256
lowy = -0.5
highy = 255.5
titley = "ADC"

loop = <start_block>
  if ( val.at(0) == 14 ) {
    <fill_perCH> (nTS,adc);
  }
<end_block>

<end_definition>
###########################################
<start_definition>
name = "ADCvsTS_Rin15"
type = TH2F_perCH
nbinsx = 10
lowx = -0.5
highx = 9.5
titlex = "TS"
nbinsy = 256
lowy = -0.5
highy = 255.5
titley = "ADC"

loop = <start_block>
  if ( val.at(0) == 15 ) {
    <fill_perCH> (nTS,adc);
  }
<end_block>

<end_definition>
###########################################
<start_suite>
name = "BXscanner"
code = 9
null = "General"
TH2F_perCH = "BADratioVsBX_CH" , "Pulse_BX0_CH" , "Pulse_BX1_CH" , "Pulse_BX2_CH" , "Pulse_BX3_CH"
<end_suite>
###########################################
<start_definition>
name = "BADratioVsBX_CH"
type = TH2F_perCH
nbinsx = 4
lowx = -0.5
highx = 3.5
titlex = "BX offset"
nbinsy = 100
lowy = 0
highy = 1
titley = "Ratio Q_{max+4}/Q_{max}"


post_loop = <start_block>
  if (global.corrupt == 0) {
    <fill_perCH> ( val.at(0) , adc2fC_QIE10_refl[ digis[global.ts_max+4].adc() ] / global.qmax );
  }
<end_block>

<end_definition>
###########################################
<start_definition>
name = "Pulse_BX0_CH"
type = TH2F_perCH
nbinsx = 10
lowx = -0.5
highx = 9.5
titlex = "TS"
nbinsy = 256
lowy = -0.5
highy = 255.5
titley = "ADC"

loop = <start_block>
  if (global.corrupt == 0) {
    if ( val.at(0) == 0) {
      <fill_perCH> (nTS,adc);
    }
  }
<end_block>

<end_definition>
###########################################
<start_definition>
name = "Pulse_BX1_CH"
type = TH2F_perCH
nbinsx = 10
lowx = -0.5
highx = 9.5
titlex = "TS"
nbinsy = 256
lowy = -0.5
highy = 255.5
titley = "ADC"

loop = <start_block>
  if (global.corrupt == 0) {
    if ( val.at(0) == 1) {
      <fill_perCH> (nTS,adc);
    }
  }
<end_block>

<end_definition>
###########################################
<start_definition>
name = "Pulse_BX2_CH"
type = TH2F_perCH
nbinsx = 10
lowx = -0.5
highx = 9.5
titlex = "TS"
nbinsy = 256
lowy = -0.5
highy = 255.5
titley = "ADC"

loop = <start_block>
  if (global.corrupt == 0) {
    if ( val.at(0) == 2) {
      <fill_perCH> (nTS,adc);
    }
  }
<end_block>

<end_definition>
###########################################
<start_definition>
name = "Pulse_BX3_CH"
type = TH2F_perCH
nbinsx = 10
lowx = -0.5
highx = 9.5
titlex = "TS"
nbinsy = 256
lowy = -0.5
highy = 255.5
titley = "ADC"

loop = <start_block>
  if (global.corrupt == 0) {
    if ( val.at(0) == 3) {
      <fill_perCH> (nTS,adc);
    }
  }
<end_block>

<end_definition>
###########################################
<start_suite>
name = "Reflection_Study"
code = 10
null = "General"
TH2F_perCH = "refrat_vs_Q_Rin15" , "Pulse_Rin15" , "Pulse_Rin0"
TH2F_perEV = "refrat_vs_Q_Rin15_EV"
<end_suite>
###########################################
<start_definition>
name = "refrat_vs_Q_Rin15"
type = TH2F_perCH
nbinsx = 256
lowx = 0
highx = 5000
titlex = "Injected Charge (fC)"
nbinsy = 100
lowy = 0
highy = 0.4
titley = "(Qmax+2)/Qmax"

post_loop = <start_block>
  if ( global.corrupt == 0 ) {
    if (_event_num > 2) {
      if ((val.at(1) == 15) || (val.at(1) == 0)) {
        <fill_perCH> (global.qmax  , (adc2fC_QIE10_refl[ digis[global.ts_max+2].adc() ]) / (global.qmax -14.45));
      }
    }
  }
<end_block>

<end_definition>
###########################################
<start_definition>
name = "refrat_vs_Q_Rin15_EV"
type = TH2F_perEV
nbinsx = 256
lowx = 0
highx = 5000
titlex = "Injected Charge (fC)"
nbinsy = 100
lowy = 0
highy = 0.4
titley = "(Qmax+2)/Qmax"

post_loop = <start_block>
  if ( global.corrupt == 0 ) {
    if (_event_num > 2) {
      if ((val.at(1) == 15) || (val.at(1) == 0)) {
        <fill_perEV> (global.qmax  , (adc2fC_QIE10_refl[ digis[global.ts_max+2].adc() ]) / (global.qmax -14.45));
      }
    }
  }
<end_block>

<end_definition>
###########################################
<start_definition>
name = "Pulse_Rin15"
type = TH2F_perCH
nbinsx = 10
lowx = -0.5
highx = 9.5
titlex = "TS"
nbinsy = 256
lowy = -0.5
highy = 255.5
titley = "ADC"

loop = <start_block>
  if ( global.corrupt == 0 ) {
    if (_event_num > 2) {
      if (val.at(1) == 15) {
        <fill_perCH> (nTS  , adc);
      }
    }
  }
<end_block>

<end_definition>
###########################################
<start_definition>
name = "Pulse_Rin0"
type = TH2F_perCH
nbinsx = 10
lowx = -0.5
highx = 9.5
titlex = "TS"
nbinsy = 256
lowy = -0.5
highy = 255.5
titley = "ADC"

loop = <start_block>
  if ( global.corrupt == 0 ) {
    if (_event_num > 2) {
      if (val.at(1) == 0) {
        <fill_perCH> (nTS  , adc);
      }
    }
  }
<end_block>

<end_definition>
###########################################
<start_suite>
name = "Pulser_Study"
code = 11
null = "General"
TH2F_perCH = "Qsum_vs_Vb_LEDA" , "Qsum_vs_Vb_LEDB" , "Qsum_vs_Vb_LEDAB"
<end_suite>
###########################################
<start_definition>
name = "Qsum_vs_Vb_LEDA"
type = TH2F_perCH
nbinsx = 26
lowx = -0.05
highx = 2.55
titlex = "LEDA Bias Voltage (V)"
nbinsy = 200
lowy = 0
highy = 30000
titley = "Q (fC)"

post_loop = <start_block>
  if ( global.corrupt == 0 ) {
    if (parameter.at(0) == "ledA") {
      <fill_perCH> ( val.at(0) , global.qsum );
    }
  }
<end_block>

<end_definition>
###########################################
<start_definition>
name = "Qsum_vs_Vb_LEDB"
type = TH2F_perCH
nbinsx = 26
lowx = -0.05
highx = 2.55
titlex = "LEDB Bias Voltage (V)"
nbinsy = 200
lowy = 0
highy = 30000
titley = "Q (fC)"

post_loop = <start_block>
  if ( global.corrupt == 0 ) {
    if (parameter.at(0) == "ledB") {
      <fill_perCH> ( val.at(0) , global.qsum );
    }
  }
<end_block>

<end_definition>
###########################################
<start_definition>
name = "Qsum_vs_Vb_LEDAB"
type = TH2F_perCH
nbinsx = 26
lowx = -0.05
highx = 2.55
titlex = "LED(A&B) Bias Voltage (V)"
nbinsy = 200
lowy = 0
highy = 30000
titley = "Q (fC)"

post_loop = <start_block>
  if ( global.corrupt == 0 ) {
    if (parameter.at(0) == "ledAB") {
      <fill_perCH> ( val.at(0) , global.qsum );
    }
  }
<end_block>

<end_definition>
###########################################
<start_suite>
name = "Burn_In"
code = 12
null = "General"
TH1F_perCH = "BurnIn_Ped_CH", "CapIDrot_CH", "CapIDrot_CH", "CapAllign_CH"
TH2F_perCH = "BurnIn_ICIScan_CH","ICI_pulse_7_CH","BurnIn_Ped_vs_capID_CH","CIDvsTS_CH"
<end_suite>
###########################################
<start_definition>
name = "BurnIn_Ped_CH"
type = TH1F_perCH
nbinsx = 256
lowx = -0.5
highx = 255.5
titlex = "ADC"

loop = <start_block>
  if ( parameter.at(0) == "PED" ) {
    if (global.corrupt == 0) {
      <fill_perCH> ( adc );
    }
  }
<end_block>

<end_definition>
###########################################
<start_definition>
name = "BurnIn_Ped_vs_capID_CH"
type = TH2F_perCH
nbinsx = 256
lowx = -0.5
highx = 255.5
titlex = "ADC"
nbinsy = 4
lowy = -0.5
highy = 3.5
titley = "capID"

loop = <start_block>
  if ( parameter.at(0) == "PED" ) {
    if (global.corrupt == 0) {
      <fill_perCH> ( adc , capid);
    }
  }
<end_block>

<end_definition>
###########################################
<start_definition>
name = "BurnIn_ICIScan_CH"
type = TH2F_perCH
nbinsx = 200
lowx = 0
highx = 10000
titlex = "Nominal Injected Charge (fC)"
nbinsy = 200
lowy = 0
highy = 10000
titley = "Integrated Charge (fC)"

post_loop = <start_block>
  if (parameter.at(0) == "ICI" ) {
    if (val.at(0) < 8 ) {
      if (global.corrupt == 0) {
        <fill_perCH> ( global.ici2q[(int)val.at(0)] , global.qsum );
      }
    }
  } 
<end_block>

<end_definition>
###########################################
<start_definition>
name = "ICI_pulse_7_CH"
type = TH2F_perCH
nbinsx = 10
lowx = -0.5
highx = 9.5
titlex = "TS"
nbinsy = 256
lowy = -0.5
highy = 255.5
titley = "ADC"

loop = <start_block>
  if ( parameter.at(0)=="ICI" && val.at(0) == 7 ) {
    <fill_perCH> ( nTS, adc );
  }
<end_block>

<end_definition>
##########################################
<start_suite>
name = "DataDump"
code = 13
null = "General"
TH1F_perEV = "CapIDrot_EV" , "CapAllign_EV"
TH1F_perCH = "CapIDrot_CH" , "CapAllign_CH"
TH2F_perCH = "CIDvsTS_CH"
TH2F_perEV = "CIDvsTS_EV"
logger = "DataDump"
<end_suite>
##########################################
<start_definition>
name = "DataDump"
type = logger
log_file = "../log/DataDumpLog.log"

pre_loop = <start_block>
  DetId detid_loc_y = digis.detid();
  HcalDetId hcaldetid_loc_y = HcalDetId(detid_loc_y);
  int iEta_loc_y = hcaldetid_loc_y.ieta();
  int iPhi_loc_y = hcaldetid_loc_y.iphi();
  int Depth_loc_y = hcaldetid_loc_y.depth();

  if (global.corrupt == 0 && iPhi_loc_y==38  && iEta_loc_y==4 && (_event_num>=900 && _event_num<1000) ) {
    <log> "#############" << endl;
    <log> "# HF: " << Depth_loc_y << endl;
    <log> "# Slot: " << iPhi_loc_y << endl;
    <log> "# QIE: " << iEta_loc_y << endl;
    <log> "# nEV:" << _event_num << endl;
    for (int iTS=0 ; iTS<10 ; iTS++) {
      <log> "TS:" <<iTS << "  --  CID " << digis[iTS].capid() << "  --  ADC " << digis[iTS].adc() << "  --  leTDC " << digis[iTS].le_tdc() << "  --  teTDC " << digis[iTS].te_tdc() << "  <<<<<<<<" << endl;
    }
    <log> "#############" << endl;
  }
<end_block>

<end_definition>
##########################################
